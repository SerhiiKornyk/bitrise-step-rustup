#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Rust Install
summary: |
  Install the Rust Toolchain.
description: |
  Install the required components to build and run Rust projects in the current workflow.
website: https://github.com/nick0602/bitrise-step-rustup/
source_code_url: https://github.com/nick0602/bitrise-step-rustup/
support_url: https://github.com/nick0602/bitrise-step-rustup/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - installer

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - rust_version: "stable"
    opts:
      title: Rust version
      summary: Installs and uses the specified Rust version.
      description: |
        Specify a Rust version. If blank, defaults to the current `stable` version.
      is_expand: true

  - auto_update_toolchain: "false"
    opts:
      title: Update the Rust Toolchain
      summary: Automatically update the Rust Toolchain on every run.
      description: |
        If `true`, forces the update of the Rust Toolchain. Valid for `stable` and `nightly` versions only.
      value_options: ["true", "false"]
      is_expand: true

  - cache_level: none
    opts:
      title: Set cache level
      summary: Sets the local folders to be cached.
      description: |
        `all` will cache cargo binaries and rustup root folder, `none` won't cache any of the above.
      value_options: [all, none]
      is_expand: true

  - show_exported_envs: "false"
    opts:
      title: Show Toolchain versions
      summary: Shows the version of the Toolchain components at the end of the step.
      description: |
        If `true`, prints the exported `$RUSTUP_VERSION`, `$RUSTC_VERSION` and `$CARGO_VERSION` at the end of the step.
      value_options: ["true", "false"]
      is_expand: true

outputs:
  - RUSTUP_VERSION:
    opts:
      title: "Current `rustup` version"
      summary: The current Rust Toolchain version
      description: |
        The version returned by the `rustup -V` command.
  - RUSTC_VERSION:
    opts:
      title: "Current `rustc` version"
      summary: The current Rustc version
      description: |
        The version returned by the `rustc -V` command.
  - CARGO_VERSION:
    opts:
      title: "Current `cargo` version"
      summary: The current Cargo version
      description: |
        The version returned by the `cargo -V` command.
